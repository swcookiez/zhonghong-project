git status
git add 将工作区的‘修改’添加到暂存区
git commit -m 将暂存区的内容提交到本地库
git log 查看历史记录主要显示commit的历史信息
git reflog HEAD@移动到当前版本需要多少步
git reset --hard '局部索引值'
git reset --hard HEAD^  ^表示后退步数
git reset --hard HEAD~2 2表示后退两步
git reset 参数说明
--soft 仅本地库移动HEAD指针
--mixed soft基础上增加，重置暂存区
--hard mixed基础上增加，重置工作区。意思是，会将工作区的文件改变到历史版本。
git diff 将工作区的文件和暂存区进行比较
git diff '局部索引值' '文件名'
#git 分支
git branch '分支名' 创建分支
git branch -v 查看分支
git checkout '分支名' 切换分支
#创建新分支后以 git remote '分支名' '新分支名',如果远程没有该分支就会创建该分支


#git 删除
git rm 'flieName'
git commit -m 'comment'
git push orgin master

#合并分支
假设有两个分支:1.master 2.slave
我在分支2，新增了内容：222
现我切换到master分支
git merge '有新内容分支'
#分支冲突
假设slave分支添加了内容 slave,slave并提交
后切换到master分支添加了内容 master，master也提交
此时使用git merge slave时会出现，conflicts错误
#解决分支冲突
1.删除特殊字符<<< >>>等等
2.修改到满意保存退出
3.git add '文件名'
4.git commit -m '提交信息'    !!!注意不要带文件名

#github-----------------------------------------------------
git remote -v 查看远程地址别名
git remote add '别名' '远程地址' 添加远程仓库别名
git remote rm '别名'
github说明，每个远程仓库，都是一个独立的仓库和本地库区别开。远程仓库有自己的分支。
我们在远程仓库的工作根目录上，添加、提交。

git push '别名' '分支名'
git clone '别名/远程地址'
效果：完整的把远程仓库下到本地，创建origin别名，初始化本地库
git pull '远程别名' '远程分支名'
git fetch '远程别名' '远程分支名'
git merge '远程别名'/'远程分支名'



